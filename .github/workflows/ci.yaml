---
name: CIðŸš¦

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v4

      - id: set-matrix
        run: echo "matrix=$(jq -c . build_versions.json)" >> $GITHUB_OUTPUT

  build_test_container:
    name: 'Build test container'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          tags: 'ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }}'
          push: false
          build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            RUBYGEM_PUPPET=${{ matrix.rubygem_puppet }}
            RUBYGEM_FACTER=${{ matrix.facter_version }}
            RUBYGEM_VOXPUPULI_TEST=${{ matrix.rubygem_voxpupuli_test }}
            RUBYGEM_VOXPUPULI_ACCEPTANCE=${{ matrix.rubygem_voxpupuli_acceptance }}
            RUBYGEM_VOXPUPULI_RELEASE=${{ matrix.rubygem_voxpupuli_release }}
            RUBYGEM_PUPPET_METADATA=${{ matrix.rubygem_puppet_metadata }}
            RUBYGEM_OVERCOMMIT=${{ matrix.rubygem_overcommit }}
            RUBYGEM_MODULESYNC=${{ matrix.rubygem_modulesync }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_PASSWORD }}

      - name: Analyze for critical and high CVEs
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: 'local://ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }}'
          sarif-file: sarif.output.${{ matrix.rubygem_puppet }}.${{ github.sha }}.json
          summary: true

      - name: Upload SARIF result
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.${{ matrix.rubygem_puppet }}.${{ github.sha }}.json

      - name: Clone voxpupuli/puppet-example repository
        uses: actions/checkout@v4
        with:
          repository: voxpupuli/puppet-example

      - name: Test container
        run: |
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile -T
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile lint
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile metadata_lint
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile strings:validate:reference
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile rubocop
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile syntax
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile spec
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile r10k:syntax
          docker run --rm  -v $(pwd):/repo ci/voxbox-${{ matrix.rubygem_puppet }}:${{ github.sha }} -f /Rakefile r10k:dependencies

  tests:
    needs:
      - build_test_container
    runs-on: ubuntu-latest
    name: Test suite
    steps:
      - run: echo Test suite completed
