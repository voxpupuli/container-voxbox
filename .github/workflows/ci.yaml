---
name: ðŸš¦ CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      build_matrix: ${{ steps.set-build-matrix.outputs.build_matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v5

      - name: 'Setup yq'
        uses: dcarbone/install-yq-action@v1.3.1

      - id: set-build-matrix
        run: echo "build_matrix=$(bash matrix.sh build)" >> $GITHUB_OUTPUT

  build_ci_container:
    name: Build ${{ matrix.platform }} CI container
    runs-on: ${{ matrix.runner }}
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build_matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          tags: 'ci/voxbox:${{ matrix.rubygem_puppet }}'
          file: Containerfile
          push: false
          platforms: linux/${{ matrix.platform }}
          build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            RUBYGEM_BUNDLER=${{ matrix.rubygem_bundler }}
            RUBYGEM_FACTER=${{ matrix.rubygem_facter }}
            RUBYGEM_MODULESYNC=${{ matrix.rubygem_modulesync }}
            RUBYGEM_ONCEOVER=${{ matrix.rubygem_onceover }}
            RUBYGEM_PUPPET_GHOSTBUSTER=${{ matrix.rubygem_puppet-ghostbuster }}
            RUBYGEM_PUPPET_METADATA=${{ matrix.rubygem_puppet_metadata }}
            RUBYGEM_PUPPET=${{ matrix.rubygem_puppet }}
            RUBYGEM_R10K=${{ matrix.rubygem_r10k }}
            RUBYGEM_RA10KE=${{ matrix.rubygem_ra10ke }}
            RUBYGEM_RSPEC_JUNIT_FORMATTER=${{ matrix.rubygem_rspec_junit_formatter }}
            RUBYGEM_RUBOCOP_PERFORMANCE=${{ matrix.rubygem_rubocop-performance }}
            RUBYGEM_VOXPUPULI_ACCEPTANCE=${{ matrix.rubygem_voxpupuli-acceptance }}
            RUBYGEM_VOXPUPULI_RELEASE=${{ matrix.rubygem_voxpupuli-release }}
            RUBYGEM_VOXPUPULI_TEST=${{ matrix.rubygem_voxpupuli-test }}

      - name: Clone voxpupuli/puppet-example repository
        uses: actions/checkout@v5
        with:
          repository: voxpupuli/puppet-example

      - name: Test container
        run: |
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile -T
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile lint
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile metadata_lint
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile r10k:dependencies
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile r10k:syntax
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile rubocop
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile spec
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile strings:validate:reference
          docker run --rm -v $PWD:/repo:Z ci/voxbox:${{ matrix.rubygem_puppet }} -f /Rakefile syntax

  info-output:
    runs-on: ubuntu-24.04
    needs:
      - setup-matrix
      - build-ARM-container
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    container: ci/voxbox:${{ matrix.rubygem_puppet }}
    steps:
      - name: bundle info
        run: |
          bundle info
          bundle outdated

  tests:
    needs:
      - build_ci_container
    runs-on: ubuntu-latest
    name: Test suite
    steps:
      - run: echo Test suite completed

  dependabot:
    permissions:
      contents: write
    name: 'Dependabot auto-merge'
    needs:
      - tests
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.4.0
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
