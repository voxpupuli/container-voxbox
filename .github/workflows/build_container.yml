---
name: ðŸ“¦ Build and Publish

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      build_matrix: ${{ steps.set-build-matrix.outputs.build_matrix }}
      tag_matrix: ${{ steps.set-tag-matrix.outputs.tag_matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v5

      - name: 'Setup yq'
        uses: dcarbone/install-yq-action@v1.3.1

      - id: set-build-matrix
        run: echo "build_matrix=$(bash matrix.sh build)" >> $GITHUB_OUTPUT

      - id: set-tag-matrix
        run: echo "tag_matrix=$(bash matrix.sh tag)" >> $GITHUB_OUTPUT

  build-and-push-container:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build_matrix) }}
    steps:
      - name: Build Vox Pupuli Test Container v${{ matrix.puppet_release }}-${{ matrix.platform }}
        uses: voxpupuli/gha-build-and-publish-a-container@v2
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build_args: |
            BASE_IMAGE=${{ matrix.base_image }}
            RUBYGEM_BUNDLER=${{ matrix.rubygem_bundler }}
            RUBYGEM_MODULESYNC=${{ matrix.rubygem_modulesync }}
            RUBYGEM_ONCEOVER=${{ matrix.rubygem_onceover }}
            RUBYGEM_OPENFACT=${{ matrix.rubygem_openfact }}
            RUBYGEM_OPENVOX=${{ matrix.rubygem_openvox }}
            RUBYGEM_PUPPET_GHOSTBUSTER=${{ matrix.rubygem_puppet-ghostbuster }}
            RUBYGEM_PUPPET_METADATA=${{ matrix.rubygem_puppet_metadata }}
            RUBYGEM_R10K=${{ matrix.rubygem_r10k }}
            RUBYGEM_RA10KE=${{ matrix.rubygem_ra10ke }}
            RUBYGEM_RSPEC_JUNIT_FORMATTER=${{ matrix.rubygem_rspec_junit_formatter }}
            RUBYGEM_RUBOCOP_PERFORMANCE=${{ matrix.rubygem_rubocop-performance }}
            RUBYGEM_VOXPUPULI_ACCEPTANCE=${{ matrix.rubygem_voxpupuli-acceptance }}
            RUBYGEM_VOXPUPULI_RELEASE=${{ matrix.rubygem_voxpupuli-release }}
            RUBYGEM_VOXPUPULI_TEST=${{ matrix.rubygem_voxpupuli-test }}
          build_arch: linux/${{ matrix.platform }}
          buildfile: Containerfile
          docker_username: voxpupulibot
          docker_password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-${{ matrix.platform }}

  create-multiarch-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - setup-matrix
      - build-and-push-container
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.tag_matrix) }}
    steps:
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the docker.io registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}

      - name: Create multiarch manifests
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:${{ matrix.rubygem_openvox }}-${{ github.ref_name }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:${{ matrix.rubygem_openvox }}-latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }}-${{ github.ref_name }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }}-latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/voxbox:latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:${{ matrix.rubygem_openvox }}-${{ github.ref_name }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:${{ matrix.rubygem_openvox }}-latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }}-${{ github.ref_name }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }} \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:${{ matrix.puppet_release }}-latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

          docker buildx imagetools create -t docker.io/${{ github.repository_owner }}/voxbox:latest \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/voxbox:${{ github.sha }}-v${{ matrix.puppet_release }}-amd64

  update-dockerhub-description:
    runs-on: ubuntu-latest
    needs:
      - create-multiarch-manifests
    steps:
      - name: Source checkout
        uses: actions/checkout@v5

      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v5
        with:
          username: voxpupulibot
          password: ${{ secrets.DOCKERHUB_BOT_ADMIN_TOKEN }}
          repository: voxpupuli/voxbox
